/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/

#include<stdio.h>
#include<stdint.h>
#include<string.h>

#include "stm32f4xx.h"
#include "FreeRTOS.h"
#include "Task.h"
			
TaskHandle_t  xTask1_handle = NULL;
TaskHandle_t  xTask2_handle = NULL;

// Task -1 and Task - 2 function prototypes
void vTask1_handler (void *params);
void vTask2_handler (void *params);

// used for semihosting
extern void initialise_monitor_handles();

int main(void)
{
	// for semihosting
	initialise_monitor_handles();

	// 1. Deinitialize SystemCoreClock settings (default) of FreeRTOS to make the sysclock run at 16MHz
	RCC_DeInit();

	SystemCoreClockUpdate();

	// Create Task - 1
	xTaskCreate(vTask1_handler, "Task - 1", configMINIMAL_STACK_SIZE, NULL, 2, &xTask1_handle);

	// Create Task - 2
	xTaskCreate(vTask2_handler, "Task - 2", configMINIMAL_STACK_SIZE, NULL, 2, &xTask2_handle);

	// FreeRTOS will put the tasks to ready state once created, from here the tasks at ready state needs to be picked up
	// by the scheduler

	// Starting the Scheduler
	vTaskStartScheduler();

	for(;;);
}

// Create Task -1 function
void vTask1_handler (void *params){
	while(1);
}

// Create Task -2 function
void vTask2_handler (void *params){
	while(1);
}
